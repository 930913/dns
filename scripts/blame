#!/usr/bin/env bash

set -e

repodir=$(git rev-parse --show-toplevel)
fqdn=$(hostname -f)
unset bad

nastygram=0
if [[ "$1" == -m ]]; then
	nastygram=1; shift
fi

head=$(git rev-parse HEAD) || exit
if headoutput=$(cd "$repodir" && scripts/check 2>&1); then
	echo "HEAD is fine, exiting"; exit
fi

workdir=$(mktemp -d /tmp/blame.XXXXXXXX)
git clone -q -s "$repodir" "$workdir"
while read commit; do
	echo "checking $commit" # from HEAD backwards
	(cd "$workdir" && git checkout -q -f "$commit")
	if output=$(cd "$workdir" && scripts/check 2>&1); then
		break
	else
		bad=$commit
		badoutput=$output
	fi
done < <(git rev-list -n 30 "$head")
rm -rf "$workdir"

if [[ "$bad" ]]; then
	headcommitter=$(git show -s --format='%cE' "$head")
	badauthor=$(git show -s --format='%aE' "$bad")
	badcommitter=$(git show -s --format='%cE' "$bad")

	echo "<$badauthor> broke it in ${bad:0:20}"
	echo "# first bad commit"
	echo "$badoutput"
	echo "# latest commit"
	echo "$headoutput"

	if (( nastygram )); then
		{
			echo "From: <daemon@$fqdn>"
			echo "To: <$badauthor>"
			if [[ "$badauthor" != "$badcommitter" ]]; then
				echo "Cc: $badcommitter"
			fi
			if [[ "$badcommitter" != "$headcommitter" ]]; then
				echo "Cc: $headcommitter"
			fi
			echo "Date: $(date "+%a, %d %b %Y %H:%M:%S %z")"
			echo "Subject: [cluenet] DNS zonefile is broken"
			echo "Reply-To: grawity@gmail.com"
			echo "Content-Type: text/plain; charset=utf-8"
			echo ""
			echo "Commits to cluenet/dns have syntax errors."
			echo ""
			echo "# latest commit ${head:0:20}"
			echo "$headoutput"
			echo ""
			echo "# first bad commit ${bad:0:20}"
			echo "$badoutput"
			echo ""
			echo "-- "
			echo "scripts/blame"
		} | /usr/sbin/sendmail -i -t
		echo "email to <$badauthor> sent"
	fi

	exit 1
fi
